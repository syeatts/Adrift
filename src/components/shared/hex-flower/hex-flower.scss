.hex-flower {
    div {
        &.controls {
            max-width: 25%;
            border: 2px solid black;
            height: 85%;
        }
    }
    $block: '.hex-grid';

    @mixin grid-item($amount) {
        @for $i from 1 through $amount {
            &:nth-of-type(#{$amount}n + #{$i}) {
                grid-column: #{$i + $i - 1} / span 3;
                @if $i % 2 != 0 {
                    grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
                }
                @if $i == 5 {
                    grid-row: calc(var(--counter) + var(--counter) + 1) / span 2;
                }
                @if $i == 3 {
                    grid-row: calc(var(--counter) + var(--counter) + 1) / span 2;
                }
            }
        }

        @for $i from 1 through 20 {
            &:nth-of-type(n + #{$i * $amount + 1}) {
                --counter: #{$i + 1};
            }
        }
    }

    @media screen and (min-width: 200px) {
        #{$block} {
            &__list {
                --amount: 5;
                --counter: 1;
            }

            &__item {
                @include grid-item(5);
            }
        }
    }

    .hex-grid {
        background-color: black;
        display: flex;
        justify-content: center;
        padding: 10% 0;
        width: 100%;
        position: absolute;
        padding-bottom: 50px;
        color: white;
        button {
            position: absolute;
            top: 25px;
            &.left {
                left: 25px;
            }
            &.right {
                right: 25px;
            }
        }

        &__list {
            --amount: 5;
            position: relative;
            padding-bottom: 10%;
            margin: 0;
            list-style-type: none;
            display: grid;
            grid-template-columns: repeat(var(--amount), 1fr 2fr) 1fr;
            grid-gap: 2.5rem 2rem;
        }

        &__item {
            position: relative;
            grid-column: 1 / span 3;
            grid-row: calc(var(--counter) + var(--counter)) / span 2;
            filter: drop-shadow(0 0 10px rgba(#444, .08));
            height: 0;
            padding-bottom: 25%;
            &:first-of-type {
                grid-column: 5 / span 3;
                grid-row: 1 / span 2;
            }
        }

        &__content {
            position: absolute;
            height: 70%;
            width: 75%;
            font-size: small;
            color: #111111;
            background-color: white;
            clip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 2rem 25%;
            text-decoration: none;
            text-align: center;
            transition: transform .24s ease-out;
            &.current {
                background-color: red;
                color: white;
            }
            span {
                &.secondary {
                    font-size: xx-small;
                }
            }
        }
        div {
            &.rules {
                h4 {
                    text-align: center;
                }
            }
            &.results {
                max-height: 520px;
                min-width: 260px;
                overflow: auto;
                h4 {
                    text-align: center;
                }
                p {
                    margin: 0 50px;
                    border-bottom: 1px solid grey;
                    width: 160px;
                }
            }
        }
    }
}